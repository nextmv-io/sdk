#!/bin/bash

RAND="$RANDOM"

if [ "${APPID}" = "" ]; then
  printf "\nPlease set the APPID environment variable to the value created in part 1.\n\n"
  exit 1
fi

INPUT_SET_ID="denver-sample-$RAND"
EXPERIMENT_ID="compare-w-service-times-$RAND"

cat << EOF
====== Create an input set   ======
Input sets are a way to group together previous run inputs that can be used in 
experiments to compare two or more versions of an application. Input sets can 
be created from previous runs by specifying a list of input IDs, or by
searching for a set of inputs that were run by an instance, optionally using 
date/time ranges. In this case we will use the most recent runs for the staging 
instance. The following command will be run to create an input set (by default, 
up to the last 20 runs in from the previous day will be used):
  nextmv experiment input-set create \\
    --app-id $APPID \\
    --input-set-id $INPUT_SET_ID \\
    --instance-id staging \\
    --name "Denver sample runs" \\
    --description "low, med, and high vol for denver"
Press return to create an input set using the default generation behavior.
EOF
read -r

nextmv experiment input-set create \
		--app-id $APPID \
		--input-set-id $INPUT_SET_ID \
    --instance-id staging \
		--name "Denver sample runs" \
		--description "low, med, and high vol for denver"

  
cat << EOF
====== Run an experiment   ======
Now let's run an experiment comparing the results of our updated version to 
that of the current production instance. An experiment runs two versions 
(represented by instances) against the same set of inputs, and compares the 
results. The following command will be run to compare the results of production 
and staging:
  nextmv experiment batch start \\
    --app-id $APPID \\
    --experiment-id "$EXPERIMENT_ID" \\
    --instance-ids "prod,staging" \\
    --input-set-id "$INPUT_SET_ID" \\
    --name "Compare v1 prod to v2 staging" \\
    --description "Comparison with service times"
Press return to create an experiment comparing the production and staging 
instances using the input set generated by this script.
EOF
read -r

nextmv experiment batch start \
      --experiment-id "$EXPERIMENT_ID" \
		  --app-id "$APPID" \
			--instance-ids "prod,staging" \
			--input-set-id "$INPUT_SET_ID" \
      --name "Compare v1 prod to v2 staging" \
			--description "Comparison with service times"

printf "\n ============= Experiment Started ================ \n\n"
cat << EOF
====== Cloud user interface   ======
The Nextmv cloud website (https://cloud.nextmv.io) provides a GUI to check the
status of experiments as well as results and visualizations of completed 
experiments.

The experiment started by this script should be visible to you there now.

EOF
